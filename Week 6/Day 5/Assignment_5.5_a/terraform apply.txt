terraform apply:
ws_s3_bucket.s3_data: Refreshing state... [id=assignment-bucket-0]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
-/+ destroy and then create replacement

Terraform will perform the following actions:

  # aws_s3_bucket.s3_data must be replaced
-/+ resource "aws_s3_bucket" "s3_data" {
      + acceleration_status         = (known after apply)
      ~ arn                         = "arn:aws:s3:::assignment-bucket-0" -> (known after apply)
      ~ bucket                      = "assignment-bucket-0" -> "faiza-gulzar-bucket" # forces replacement
      ~ bucket_domain_name          = "assignment-bucket-0.s3.amazonaws.com" -> (known after apply)
      + bucket_prefix               = (known after apply)
      ~ bucket_regional_domain_name = "assignment-bucket-0.s3.amazonaws.com" -> (known after apply)
      ~ hosted_zone_id              = "Z3AQBSTGFYJSTF" -> (known after apply)
      ~ id                          = "assignment-bucket-0" -> (known after apply)
      ~ object_lock_enabled         = false -> (known after apply)
      + policy                      = (known after apply)
      ~ region                      = "us-east-1" -> (known after apply)
      ~ request_payer               = "BucketOwner" -> (known after apply)
      - tags                        = {} -> null
      ~ tags_all                    = {} -> (known after apply)
      + website_domain              = (known after apply)
      + website_endpoint            = (known after apply)
        # (2 unchanged attributes hidden)

      - grant {
          - id          = "80404e471e11fd066e32eae7f7106c2fc1239e358c509144e6e030a87a2fa7a3" -> null
          - permissions = [
              - "FULL_CONTROL",
            ] -> null
          - type        = "CanonicalUser" -> null
        }

      - server_side_encryption_configuration {
          - rule {
              - bucket_key_enabled = false -> null

              - apply_server_side_encryption_by_default {
                  - sse_algorithm = "AES256" -> null
                }
            }
        }

      - versioning {
          - enabled    = false -> null
          - mfa_delete = false -> null
        }
    }

Plan: 1 to add, 0 to change, 1 to destroy.

Changes to Outputs:
  ~ faiza-gulzar-bucket = "assignment-bucket-0" -> (known after apply)
╷
│ Warning: Argument is deprecated
│ 
│   with aws_s3_bucket.s3_data,
│   on main.tf line 16, in resource "aws_s3_bucket" "s3_data":
│   16:     acl = "private"
│ 
│ Use the aws_s3_bucket_acl resource instead
│ 
│ (and one more similar warning elsewhere)
╵

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

aws_s3_bucket.s3_data: Destroying... [id=assignment-bucket-0]
aws_s3_bucket.s3_data: Destruction complete after 1s
aws_s3_bucket.s3_data: Creating...
aws_s3_bucket.s3_data: Creation complete after 4s [id=faiza-gulzar-bucket]
╷
│ Warning: Argument is deprecated
│ 
│   with aws_s3_bucket.s3_data,
│   on main.tf line 16, in resource "aws_s3_bucket" "s3_data":
│   16:     acl = "private"
│ 
│ Use the aws_s3_bucket_acl resource instead
╵

Apply complete! Resources: 1 added, 0 changed, 1 destroyed.

Outputs:

faiza-gulzar-bucket = "faiza-gulzar-bucket"

